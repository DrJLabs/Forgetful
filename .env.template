# ===============================================
# mem0-stack Environment Configuration Template
# ===============================================
# Copy this file to .env and customize for your environment
#
# Usage:
#   cp .env.template .env
#   # Edit .env with your actual values
#   ./scripts/validate_config.py

# ===============================================
# ENVIRONMENT IDENTIFICATION
# ===============================================
APP_ENVIRONMENT=development
APP_DEBUG=true
APP_LOG_LEVEL=INFO
APP_USER_ID=drj

# ===============================================
# DATABASE CONFIGURATION (PostgreSQL + pgvector)
# ===============================================

# PostgreSQL Connection Settings
DATABASE_HOST=postgres-mem0
DATABASE_PORT=5432
DATABASE_NAME=mem0
DATABASE_USER=your_username_here
DATABASE_PASSWORD=your_secure_password_here

# Database Connection Pool Settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30

# Database URL (constructed from above variables)
DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

# Legacy Docker Compose Variables (for backward compatibility)
POSTGRES_USER=${DATABASE_USER}
POSTGRES_PASSWORD=${DATABASE_PASSWORD}
POSTGRES_DB=${DATABASE_NAME}

# ===============================================
# GRAPH DATABASE CONFIGURATION (Neo4j)
# ===============================================

# Neo4j Connection Settings
NEO4J_HOST=neo4j-mem0
NEO4J_PORT=7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password_here
NEO4J_DATABASE=neo4j

# Neo4j Connection Pool Settings
NEO4J_MAX_CONNECTIONS=50
NEO4J_CONNECTION_TIMEOUT=30

# Neo4j URLs (constructed from above variables)
NEO4J_URI=bolt://${NEO4J_HOST}:${NEO4J_PORT}
NEO4J_URL=neo4j://${NEO4J_USERNAME}:${NEO4J_PASSWORD}@${NEO4J_HOST}:${NEO4J_PORT}

# Legacy Docker Compose Variables (for backward compatibility)
NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}

# ===============================================
# OPENAI CONFIGURATION
# ===============================================

# OpenAI API Settings
OPENAI_API_KEY=sk-proj-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# OpenAI API Behavior
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.1

# OpenAI API Performance Settings
OPENAI_REQUEST_TIMEOUT=30
OPENAI_MAX_RETRIES=3

# Legacy Variable (for backward compatibility)
API_KEY=${OPENAI_API_KEY}

# ===============================================
# CHATGPT OIDC AUTHENTICATION CONFIGURATION
# ===============================================

# Google OAuth Configuration (for OIDC server)
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here
GOOGLE_REDIRECT_URI=https://oidc.drjlabs.com/auth/callback

# OIDC Server Configuration
OIDC_BASE_URL=https://oidc.drjlabs.com
OIDC_PORT=8766

# OIDC Integration for MCP Server
OIDC_JWKS_URL=https://oidc.drjlabs.com/auth/jwks
OIDC_ISSUER=https://oidc.drjlabs.com
OIDC_AUDIENCE=your_google_client_id_here

# ===============================================
# SERVICE CONFIGURATION
# ===============================================

# Service URLs (Internal)
MEM0_API_URL=http://localhost:8000
OPENMEMORY_API_URL=http://localhost:8765
OPENMEMORY_UI_URL=http://localhost:3000

# Service Configuration
MEM0_API_PORT=8000
OPENMEMORY_API_PORT=8765
OPENMEMORY_UI_PORT=3000

# Legacy Variable (for backward compatibility)
USER=${APP_USER_ID}

# ===============================================
# FRONTEND CONFIGURATION (Next.js)
# ===============================================

# Next.js Public Environment Variables
NEXT_PUBLIC_API_URL=http://localhost:8765
NEXT_PUBLIC_USER_ID=${APP_USER_ID}
NEXT_PUBLIC_ENVIRONMENT=${APP_ENVIRONMENT}

# Build Information
NEXT_PUBLIC_BUILD_TIME=auto_generated
NEXT_PUBLIC_VERSION=1.0.0

# ===============================================
# DOCKER COMPOSE CONFIGURATION
# ===============================================

# Docker Compose Project Name
COMPOSE_PROJECT_NAME=mem0-stack

# ===============================================
# TESTING CONFIGURATION
# ===============================================

# Test Environment Settings
TESTING=false
TEST_DATABASE_HOST=localhost
TEST_DATABASE_PORT=5432
TEST_DATABASE_NAME=test_mem0
TEST_DATABASE_USER=postgres
TEST_DATABASE_PASSWORD=testpass
TEST_DATABASE_URL=postgresql://${TEST_DATABASE_USER}:${TEST_DATABASE_PASSWORD}@${TEST_DATABASE_HOST}:${TEST_DATABASE_PORT}/${TEST_DATABASE_NAME}

# Test Neo4j Settings
TEST_NEO4J_HOST=localhost
TEST_NEO4J_PORT=7687
TEST_NEO4J_USERNAME=neo4j
TEST_NEO4J_PASSWORD=testpass
TEST_NEO4J_URI=bolt://${TEST_NEO4J_HOST}:${TEST_NEO4J_PORT}
TEST_NEO4J_URL=neo4j://${TEST_NEO4J_USERNAME}:${TEST_NEO4J_PASSWORD}@${TEST_NEO4J_HOST}:${TEST_NEO4J_PORT}

# Test OpenAI Settings
TEST_OPENAI_API_KEY=sk-test-key-for-mocking-only

# ===============================================
# CI/CD CONFIGURATION
# ===============================================

# CI Environment Detection
CI=false
GITHUB_ACTIONS=false

# CI Database Settings (override for CI)
CI_DATABASE_HOST=localhost
CI_DATABASE_PORT=5432
CI_DATABASE_NAME=test_db
CI_DATABASE_USER=postgres
CI_DATABASE_PASSWORD=testpass
CI_DATABASE_URL=postgresql://${CI_DATABASE_USER}:${CI_DATABASE_PASSWORD}@${CI_DATABASE_HOST}:${CI_DATABASE_PORT}/${CI_DATABASE_NAME}

# CI Neo4j Settings
CI_NEO4J_HOST=localhost
CI_NEO4J_PORT=7687
CI_NEO4J_USERNAME=neo4j
CI_NEO4J_PASSWORD=testpass
CI_NEO4J_URI=bolt://${CI_NEO4J_HOST}:${CI_NEO4J_PORT}

# CI Test Settings
CI_COVERAGE_THRESHOLD=80
CI_PYTHONPATH=/workspace:/workspace/openmemory/api

# ===============================================
# PRODUCTION CONFIGURATION
# ===============================================

# Production Security
PRODUCTION_SECRET_KEY=your_production_secret_key_here
PRODUCTION_API_KEYS=key1,key2,key3

# GPT Actions Bridge Configuration
GPT_API_KEYS=your_gpt_api_keys_here

# Telemetry Configuration
POSTHOG_API_KEY=your_posthog_api_key_here

# Production Performance
PRODUCTION_POOL_SIZE=50
PRODUCTION_MAX_CONNECTIONS=100
PRODUCTION_CACHE_SIZE=10000

# Production Monitoring
PRODUCTION_LOG_LEVEL=WARNING
PRODUCTION_METRICS_ENABLED=true
PRODUCTION_HEALTH_CHECK_INTERVAL=30

# ===============================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ===============================================

# Development Environment Overrides
DEV_DATABASE_HOST=postgres-mem0
DEV_NEO4J_HOST=neo4j-mem0
DEV_DEBUG=true
DEV_LOG_LEVEL=DEBUG

# Production Environment Overrides
PROD_DATABASE_HOST=postgres-mem0
PROD_NEO4J_HOST=neo4j-mem0
PROD_DEBUG=false
PROD_LOG_LEVEL=WARNING

# ===============================================
# ADDITIONAL CONFIGURATION
# ===============================================

# Vector Storage Performance
VECTOR_INDEX_TYPE=ivfflat
VECTOR_INDEX_LISTS=100
VECTOR_DIMENSIONS=1536

# Memory Management
MEMORY_CACHE_SIZE=1000
MEMORY_CACHE_TTL=3600

# Performance Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# ===============================================
# VALIDATION REQUIREMENTS
# ===============================================

# Required Variables (Must be set):
# - DATABASE_USER
# - DATABASE_PASSWORD
# - NEO4J_PASSWORD
# - OPENAI_API_KEY
# - APP_USER_ID

# Optional Variables (Have defaults):
# - DATABASE_HOST (default: postgres-mem0)
# - DATABASE_PORT (default: 5432)
# - DATABASE_NAME (default: mem0)
# - NEO4J_HOST (default: neo4j-mem0)
# - NEO4J_PORT (default: 7687)
# - NEO4J_USERNAME (default: neo4j)
# - OPENAI_MODEL (default: gpt-4o-mini)
# - APP_ENVIRONMENT (default: development)

# ===============================================
# QUICK START EXAMPLES
# ===============================================

# Example 1: Minimal Development Configuration
# DATABASE_USER=drj
# DATABASE_PASSWORD=dev_password_123
# NEO4J_PASSWORD=dev_neo4j_pass
# OPENAI_API_KEY=sk-proj-your-dev-key-here
# APP_USER_ID=drj

# Example 2: Production Configuration
# APP_ENVIRONMENT=production
# APP_DEBUG=false
# APP_LOG_LEVEL=WARNING
# DATABASE_USER=prod_user
# DATABASE_PASSWORD=super_secure_production_password_123
# NEO4J_PASSWORD=ultra_secure_neo4j_password
# OPENAI_API_KEY=sk-proj-production-key-here
# APP_USER_ID=production_user
# PRODUCTION_SECRET_KEY=your-production-secret-key

# Example 3: CI/CD Configuration
# CI=true
# TESTING=true
# APP_ENVIRONMENT=test
# DATABASE_URL=${CI_DATABASE_URL}
# NEO4J_URI=${CI_NEO4J_URI}
# OPENAI_API_KEY=${TEST_OPENAI_API_KEY}

# ===============================================
# TROUBLESHOOTING
# ===============================================

# Common Issues:
# 1. Database connection fails
#    - Check DATABASE_HOST, DATABASE_PORT, DATABASE_USER, DATABASE_PASSWORD
#    - Ensure PostgreSQL is running
#    - Verify network connectivity
#
# 2. Neo4j connection fails
#    - Check NEO4J_HOST, NEO4J_PORT, NEO4J_USERNAME, NEO4J_PASSWORD
#    - Ensure Neo4j is running
#    - Verify authentication credentials
#
# 3. OpenAI API errors
#    - Verify OPENAI_API_KEY starts with 'sk-'
#    - Check API key validity and quota
#    - Ensure internet connectivity
#
# 4. Environment-specific issues
#    - Check APP_ENVIRONMENT setting
#    - Verify environment-specific overrides are correct
#    - Ensure CI/Test variables are set properly

# ===============================================
# SECURITY BEST PRACTICES
# ===============================================

# 1. Use strong passwords (minimum 12 characters)
# 2. Never commit .env files to version control
# 3. Use different credentials for different environments
# 4. Rotate API keys regularly
# 5. Use environment-specific secrets management
# 6. Enable SSL/TLS in production
# 7. Restrict database access to specific IPs
# 8. Use API rate limiting
# 9. Monitor for unusual access patterns
# 10. Backup environment configurations securely

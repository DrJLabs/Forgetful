# GitHub Branch Protection Rules Configuration
# This file documents the required branch protection rules for enforcing quality gates
# Apply these rules via GitHub CLI or web interface

# =============================================================================
# MAIN BRANCH PROTECTION
# =============================================================================
main:
  protection:
    required_status_checks:
      strict: true # Require branches to be up-to-date before merging
      contexts:
        # All 7 Quality Gates must pass
        - '🧪 Unit Tests (Quality Gate 1)'
        - '📋 API Contract Tests (Quality Gate 2)'
        - '🔒 Security Tests (Quality Gate 3)'
        - '🗄️ Database Tests (Quality Gate 4)'
        - '🔗 Integration Tests (Quality Gate 5)'
        - '⚡ Performance Tests (Quality Gate 6)'
        - '🔍 Code Quality (Quality Gate 7)'
        - '🚦 Merge Decision (Final Quality Gate)'

    enforce_admins: true # Include administrators in restrictions
    required_pull_request_reviews:
      required_approving_review_count: 1
      dismiss_stale_reviews: true
      require_code_owner_reviews: false
      require_last_push_approval: false

    restrictions:
      # No direct pushes to main - all changes must go through PRs
      users: []
      teams: []
      apps: []

    required_linear_history: false
    allow_force_pushes: false
    allow_deletions: false
    block_creations: false
    required_conversation_resolution: true

# =============================================================================
# DEVELOP BRANCH PROTECTION
# =============================================================================
develop:
  protection:
    required_status_checks:
      strict: true
      contexts:
        # Same quality gates for develop branch
        - '🧪 Unit Tests (Quality Gate 1)'
        - '📋 API Contract Tests (Quality Gate 2)'
        - '🔒 Security Tests (Quality Gate 3)'
        - '🗄️ Database Tests (Quality Gate 4)'
        - '🔗 Integration Tests (Quality Gate 5)'
        - '⚡ Performance Tests (Quality Gate 6)'
        - '🔍 Code Quality (Quality Gate 7)'
        - '🚦 Merge Decision (Final Quality Gate)'

    enforce_admins: true
    required_pull_request_reviews:
      required_approving_review_count: 1
      dismiss_stale_reviews: true
      require_code_owner_reviews: false
      require_last_push_approval: false

    restrictions:
      users: []
      teams: []
      apps: []

    required_linear_history: false
    allow_force_pushes: false
    allow_deletions: false
    block_creations: false
    required_conversation_resolution: true

# =============================================================================
# QUALITY GATE REQUIREMENTS
# =============================================================================
quality_gates:
  description: 'All quality gates must pass before merge is allowed'

  gate_1_unit_tests:
    name: '🧪 Unit Tests (Quality Gate 1)'
    description: 'Comprehensive unit test suite (106+ tests)'
    coverage_requirement: '80%'
    blocking: true

  gate_2_contract_tests:
    name: '📋 API Contract Tests (Quality Gate 2)'
    description: 'API endpoint validation and contract testing'
    coverage_requirement: '100% of endpoints'
    blocking: true

  gate_3_security_tests:
    name: '🔒 Security Tests (Quality Gate 3)'
    description: 'Security vulnerability testing (150+ test cases)'
    coverage_requirement: '100% of endpoints'
    blocking: true

  gate_4_database_tests:
    name: '🗄️ Database Tests (Quality Gate 4)'
    description: 'Database integrity and migration testing'
    coverage_requirement: 'All migrations tested'
    blocking: true

  gate_5_integration_tests:
    name: '🔗 Integration Tests (Quality Gate 5)'
    description: 'Cross-service integration testing'
    coverage_requirement: 'All integration points'
    blocking: true

  gate_6_performance_tests:
    name: '⚡ Performance Tests (Quality Gate 6)'
    description: 'Performance benchmarking and regression testing'
    coverage_requirement: 'No performance regressions'
    blocking: true

  gate_7_code_quality:
    name: '🔍 Code Quality (Quality Gate 7)'
    description: 'Code formatting, linting, and security scanning'
    coverage_requirement: 'No quality violations'
    blocking: true
# =============================================================================
# GITHUB CLI COMMANDS TO APPLY RULES
# =============================================================================
#
# Apply these rules using GitHub CLI:
#
# gh api repos/DrJLabs/Forgetful/branches/main/protection \
#   --method PUT \
#   --field required_status_checks='{"strict":true,"contexts":["🧪 Unit Tests (Quality Gate 1)","📋 API Contract Tests (Quality Gate 2)","🔒 Security Tests (Quality Gate 3)","🗄️ Database Tests (Quality Gate 4)","🔗 Integration Tests (Quality Gate 5)","⚡ Performance Tests (Quality Gate 6)","🔍 Code Quality (Quality Gate 7)","🚦 Merge Decision (Final Quality Gate)"]}' \
#   --field enforce_admins=true \
#   --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true,"require_code_owner_reviews":false}' \
#   --field restrictions='{"users":[],"teams":[],"apps":[]}' \
#   --field allow_force_pushes=false \
#   --field allow_deletions=false \
#   --field required_conversation_resolution=true
#
# gh api repos/DrJLabs/Forgetful/branches/develop/protection \
#   --method PUT \
#   --field required_status_checks='{"strict":true,"contexts":["🧪 Unit Tests (Quality Gate 1)","📋 API Contract Tests (Quality Gate 2)","🔒 Security Tests (Quality Gate 3)","🗄️ Database Tests (Quality Gate 4)","🔗 Integration Tests (Quality Gate 5)","⚡ Performance Tests (Quality Gate 6)","🔍 Code Quality (Quality Gate 7)","🚦 Merge Decision (Final Quality Gate)"]}' \
#   --field enforce_admins=true \
#   --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true,"require_code_owner_reviews":false}' \
#   --field restrictions='{"users":[],"teams":[],"apps":[]}' \
#   --field allow_force_pushes=false \
#   --field allow_deletions=false \
#   --field required_conversation_resolution=true

# =============================================================================
# MERGE BLOCKING ENFORCEMENT
# =============================================================================
#
# The following conditions will BLOCK merges:
#
# 1. Any Quality Gate fails (1-7)
# 2. Final Merge Decision job fails
# 3. Coverage below 80% threshold
# 4. Security vulnerabilities detected
# 5. API contract violations
# 6. Database migration failures
# 7. Performance regressions
# 8. Code quality violations
#
# The merge will ONLY be allowed when ALL quality gates pass successfully.
# This ensures zero major bugs reach the main branch.

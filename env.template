# ===============================================
# mem0-stack Environment Configuration Template
# ===============================================
# Copy this file to .env and customize for your environment
#
# Usage:
#   cp env.template .env
#   # Edit .env with your actual values
#   ./scripts/validate_config.py

# ===============================================
# DATABASE CONFIGURATION (PostgreSQL + pgvector)
# ===============================================

# PostgreSQL Connection Settings
DATABASE_HOST=postgres-mem0
DATABASE_PORT=5432
DATABASE_NAME=mem0
DATABASE_USER=your_username_here
DATABASE_PASSWORD=your_secure_password_here

# Database Connection Pool (Advanced)
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30

# Derived Variables (Auto-generated by config.py, do not modify)
# This URL is constructed dynamically by the configuration system - do not uncomment
# DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

# ===============================================
# GRAPH DATABASE CONFIGURATION (Neo4j)
# ===============================================

# Neo4j Connection Settings
NEO4J_HOST=neo4j-mem0
NEO4J_PORT=7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password_here
NEO4J_DATABASE=neo4j

# Neo4j Connection Pool (Advanced)
NEO4J_MAX_CONNECTIONS=50
NEO4J_CONNECTION_TIMEOUT=30

# Derived Variables (Auto-generated by config.py, do not modify)
# NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
# NEO4J_URI=bolt://${NEO4J_HOST}:${NEO4J_PORT}
# NEO4J_URL=neo4j://${NEO4J_USERNAME}:${NEO4J_PASSWORD}@${NEO4J_HOST}:${NEO4J_PORT}

# ===============================================
# OPENAI CONFIGURATION
# ===============================================

# OpenAI API Settings (Required)
OPENAI_API_KEY=sk-proj-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# OpenAI API Behavior
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.1

# OpenAI API Performance (Advanced)
OPENAI_REQUEST_TIMEOUT=30
OPENAI_MAX_RETRIES=3

# ===============================================
# APPLICATION CONFIGURATION
# ===============================================

# Application Identity
APP_USER_ID=your_username_here
APP_ENVIRONMENT=development
APP_DEBUG=false
APP_LOG_LEVEL=INFO

# Security Settings (Optional)
APP_SECRET_KEY=your_secret_key_here
APP_API_KEY=your_api_key_here

# ===============================================
# SERVICE URLS
# ===============================================

# Internal Service URLs
MEM0_API_URL=http://localhost:8000
OPENMEMORY_API_URL=http://localhost:8765
OPENMEMORY_UI_URL=http://localhost:3000

# External Service URLs (Optional)
REDIS_URL=redis://localhost:6379
ELASTICSEARCH_URL=http://localhost:9200

# ===============================================
# FRONTEND CONFIGURATION (Next.js)
# ===============================================

# Next.js Public Environment Variables
NEXT_PUBLIC_API_URL=http://localhost:8765
NEXT_PUBLIC_USER_ID=your_username_here
NEXT_PUBLIC_ENVIRONMENT=development

# Build Information (Optional)
NEXT_PUBLIC_BUILD_TIME=auto_generated
NEXT_PUBLIC_VERSION=1.0.0

# ===============================================
# DOCKER COMPOSE CONFIGURATION
# ===============================================

# Docker Compose Project
COMPOSE_PROJECT_NAME=mem0-stack

# Legacy Docker Variables (Auto-populated)
POSTGRES_USER=your_username_here
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_DB=mem0
USER=your_username_here

# ===============================================
# ADVANCED CONFIGURATION
# ===============================================

# Vector Storage Performance
VECTOR_INDEX_TYPE=ivfflat
VECTOR_INDEX_LISTS=100
VECTOR_DIMENSIONS=1536

# Memory Management
MEMORY_CACHE_SIZE=1000
MEMORY_CACHE_TTL=3600

# Performance Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# ===============================================
# DEVELOPMENT CONFIGURATION
# ===============================================

# Development Tools
DEV_HOT_RELOAD=true
DEV_DEBUG_SQL=false
DEV_MOCK_OPENAI=false

# Testing Configuration
TEST_DATABASE_URL=postgresql://test:test@localhost:5432/test_mem0
TEST_NEO4J_URL=bolt://localhost:7687
TEST_OPENAI_API_KEY=sk-test-key

# ===============================================
# PRODUCTION CONFIGURATION
# ===============================================

# Production Security
PRODUCTION_SECRET_KEY=your_production_secret_key_here
PRODUCTION_API_KEYS=key1,key2,key3

# Production Performance
PRODUCTION_POOL_SIZE=50
PRODUCTION_MAX_CONNECTIONS=100
PRODUCTION_CACHE_SIZE=10000

# Production Monitoring
PRODUCTION_LOG_LEVEL=WARNING
PRODUCTION_METRICS_ENABLED=true
PRODUCTION_HEALTH_CHECK_INTERVAL=30

# ===============================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ===============================================

# Development Environment
# Uncomment for development
# APP_ENVIRONMENT=development
# APP_DEBUG=true
# APP_LOG_LEVEL=DEBUG

# Staging Environment
# Uncomment for staging
# APP_ENVIRONMENT=staging
# APP_DEBUG=false
# APP_LOG_LEVEL=INFO

# Production Environment
# Uncomment for production
# APP_ENVIRONMENT=production
# APP_DEBUG=false
# APP_LOG_LEVEL=WARNING

# ===============================================
# VALIDATION NOTES
# ===============================================

# Required Variables (Must be set):
# - DATABASE_USER
# - DATABASE_PASSWORD
# - NEO4J_PASSWORD
# - OPENAI_API_KEY
# - APP_USER_ID

# Optional Variables (Have defaults):
# - DATABASE_HOST (default: postgres-mem0)
# - DATABASE_PORT (default: 5432)
# - DATABASE_NAME (default: mem0)
# - NEO4J_HOST (default: neo4j-mem0)
# - NEO4J_PORT (default: 7687)
# - NEO4J_USERNAME (default: neo4j)
# - OPENAI_MODEL (default: gpt-4o-mini)
# - APP_ENVIRONMENT (default: development)

# Auto-generated Variables (Handled by config.py):
# - DATABASE_URL (constructed from database components)
# - NEO4J_URI (constructed from Neo4j components)
# - NEO4J_URL (constructed from Neo4j components)
# - NEO4J_AUTH (constructed from Neo4j components)

# Validation Commands:
# python scripts/validate_config.py
# python shared/config.py  # Direct validation
# docker-compose config    # Docker configuration test

# ===============================================
# QUICK START EXAMPLES
# ===============================================

# Example 1: Minimal Configuration
# DATABASE_USER=drj
# DATABASE_PASSWORD=mypassword123
# NEO4J_PASSWORD=neo4jpassword
# OPENAI_API_KEY=sk-proj-your-key-here
# APP_USER_ID=drj

# Example 2: Development Configuration
# DATABASE_USER=dev_user
# DATABASE_PASSWORD=dev_password_123
# NEO4J_PASSWORD=dev_neo4j_pass
# OPENAI_API_KEY=sk-proj-dev-key-here
# APP_USER_ID=developer
# APP_ENVIRONMENT=development
# APP_DEBUG=true
# APP_LOG_LEVEL=DEBUG

# Example 3: Production Configuration
# DATABASE_USER=prod_user
# DATABASE_PASSWORD=super_secure_production_password_123
# NEO4J_PASSWORD=ultra_secure_neo4j_password
# OPENAI_API_KEY=sk-proj-production-key-here
# APP_USER_ID=production_user
# APP_ENVIRONMENT=production
# APP_DEBUG=false
# APP_LOG_LEVEL=WARNING
# PRODUCTION_SECRET_KEY=your-production-secret-key
# PRODUCTION_POOL_SIZE=100

# ===============================================
# TROUBLESHOOTING
# ===============================================

# Common Issues:
# 1. Database connection fails
#    - Check DATABASE_HOST, DATABASE_PORT, DATABASE_USER, DATABASE_PASSWORD
#    - Ensure PostgreSQL is running
#    - Verify network connectivity
#
# 2. Neo4j connection fails
#    - Check NEO4J_HOST, NEO4J_PORT, NEO4J_USERNAME, NEO4J_PASSWORD
#    - Ensure Neo4j is running
#    - Verify authentication credentials
#
# 3. OpenAI API errors
#    - Verify OPENAI_API_KEY starts with 'sk-'
#    - Check API key validity and quota
#    - Ensure internet connectivity
#
# 4. Frontend not connecting to API
#    - Verify NEXT_PUBLIC_API_URL matches actual API URL
#    - Check CORS configuration
#    - Ensure API server is running
#
# 5. Docker services not starting
#    - Run `docker-compose config` to validate
#    - Check docker-compose.yml environment variables
#    - Verify .env file is in correct location

# ===============================================
# SECURITY BEST PRACTICES
# ===============================================

# 1. Use strong passwords (minimum 12 characters)
# 2. Never commit .env files to version control
# 3. Use different credentials for different environments
# 4. Rotate API keys regularly
# 5. Use environment-specific secrets management
# 6. Enable SSL/TLS in production
# 7. Restrict database access to specific IPs
# 8. Use API rate limiting
# 9. Monitor for unusual access patterns
# 10. Backup environment configurations securely

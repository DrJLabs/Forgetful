[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
force-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
    | data
    | archive
    | backups
    | test-reports
    | monitoring
    | docs
    | mem0/embedchain
    | mem0/.venv
    | venv
    | __pycache__
    | \.pytest_cache
  )/
)
'''
# required-version = "24.2.0"
preview = false
skip-string-normalization = false
skip-magic-trailing-comma = false

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
force_single_line = false
known_first_party = ["mem0", "openmemory", "shared"]
known_third_party = ["pytest", "requests", "fastapi", "sqlalchemy", "alembic", "pydantic"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["venv/*", "data/*", "archive/*", "backups/*", "test-reports/*", "monitoring/*", "docs/*", "mem0/embedchain/*"]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E266",  # too many leading '#' for block comment
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "F403",  # 'from module import *' used; unable to detect undefined names
    "F401",  # imported but unused
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line with quotes
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "E402",  # module level import not at top of file
    "E711",  # comparison to None should be 'if cond is None:'
    "E712",  # comparison to True should be 'if cond is True:' or 'if cond:'
    "E714",  # test for object identity should be 'is not'
    "F541",  # f-string is missing placeholders
    "F811",  # redefinition of unused variable
    "F841",  # local variable is assigned to but never used
    "TYP001"  # typing import guard
]
max-complexity = 15
select = ["B", "C", "E", "F", "W", "T4", "B9"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    "data",
    "archive",
    "backups",
    "test-reports",
    "monitoring",
    "docs",
    "mem0/embedchain",
    "mem0/.venv",
    ".pytest_cache",
    ".mypy_cache",
    ".tox",
    "build",
    "dist",
]

# Ruff configuration - replaces black, isort, flake8, pyupgrade, bandit
[tool.ruff]
target-version = "py311"
line-length = 88
fix = true

# Enable pycodestyle (E), Pyflakes (F), isort (I), pyupgrade (UP), bandit (S)
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "S",   # bandit (security)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
]

lint.ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by formatter)
    "S101",  # assert detected (allow asserts in tests)
    "S603",  # subprocess call detected
    "S607",  # starting a process with a partial executable path
    "T201",  # print statements (allow for debugging)
]

# Exclude same directories as other tools
exclude = [
    ".git",
    "__pycache__",
    "venv",
    "data",
    "archive",
    "backups",
    "test-reports",
    "monitoring",
    "docs",
    "mem0/embedchain",
    "mem0/.venv",
    ".pytest_cache",
    ".mypy_cache",
    ".tox",
    "build",
    "dist",
]

[tool.ruff.lint.isort]
known-first-party = ["mem0", "openmemory", "shared"]
known-third-party = ["pytest", "requests", "fastapi", "sqlalchemy", "alembic", "pydantic"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv/",
    "data/",
    "archive/",
    "backups/",
    "test-reports/",
    "monitoring/",
    "docs/",
    "mem0/embedchain/",
    "mem0/.venv/",
]
